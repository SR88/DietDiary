@startuml

title __REPOSITORY's Package Diagram__\n

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class DiaryEntryRepository {
          - allFoodDiary : LiveData<List<DiaryEntry>>
          - entryList : List<DiaryEntry>
          - entryListByDiemId : List<DiaryEntry>
          - listLiveDataByDiemId : LiveData<List<DiaryEntry>>
          + DiaryEntryRepository()
          + insert()
          + update()
          + delete()
          + deleteAll()
          + getAllFoodEntries()
          + getEntriesByDiemId()
          + getAllEntriesList()
          + getAllEntriesListByDiemId()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class InsertFoodDiariesAsyncTask {
          - InsertFoodDiariesAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class UpdateFoodDiariesAsyncTask {
          - UpdateFoodDiariesAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class DeleteFoodDiariesAsyncTask {
          - DeleteFoodDiariesAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class DeleteAllFoodDiariesAsyncTask {
          - DeleteAllFoodDiariesAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class DiemRepository {
          - listDiemByDate : List<Diem>
          - joinedData : LiveData<List<Diem>>
          - liveDataDiems : LiveData<List<Diem>>
          - listDiemById : List<DiemAndEntry>
          + DiemRepository()
          + getByDate()
          + getLiveById()
          + getJoinEntryById()
          + getLiveDataDiems()
          + getJoinedData()
          + insert()
          + delete()
          + update()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class InsertDiemAsyncTask {
          + InsertDiemAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class DeleteDiemAsyncTask {
          + DeleteDiemAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class UpdateDiemAsyncTask {
          + UpdateDiemAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class FoodAndEntryRepository {
          - listLiveData : LiveData<List<FoodAndEntry>>
          - foodAndEntryList : List<FoodAndEntry>
          + FoodAndEntryRepository()
          + getFoodAndEntryLiveData()
          + getFoodAndEntryById()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class FoodRepository {
          - allFoodTypes : LiveData<List<FoodType>>
          - allFoods : LiveData<List<Food>>
          - allFoodDiary : LiveData<List<DiaryEntry>>
          - allFoodsAndTypes : LiveData<List<FoodAndType>>
          - liveDataSearch : LiveData<List<Food>>
          - getAllFoodsList : List<Food>
          - searchResultsList : List<Food>
          + FoodRepository()
          + insert()
          + update()
          + delete()
          + deleteAll()
          + getAllFoods()
          + getGetAllFoodsList()
          + getAllFoodsAndTypes()
          + getFoodById()
          + search()
          + searchForFood()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class InsertFoodsAsyncTask {
          - InsertFoodsAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class UpdateFoodsAsyncTask {
          - UpdateFoodsAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class DeleteFoodsAsyncTask {
          - DeleteFoodsAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class DeleteAllFoodsAsyncTask {
          - DeleteAllFoodsAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class FoodTypeRepository {
          - allFoodTypes : LiveData<List<FoodType>>
          - allFoodTypesList : List<FoodType>
          + FoodTypeRepository()
          + insert()
          + update()
          + delete()
          + deleteAll()
          + getAllFoodTypes()
          + getAllFoodTypesList()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class InsertFoodTypesAsyncTask {
          - InsertFoodTypesAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class UpdateFoodTypesAsyncTask {
          - UpdateFoodTypesAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class DeleteFoodTypesAsyncTask {
          - DeleteFoodTypesAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class DeleteAllFoodTypesAsyncTask {
          - DeleteAllFoodTypesAsyncTask()
          # doInBackground()
      }
    }
  }
  

  package com.shneddy.dietdiary {
    package com.shneddy.dietdiary.repository {
      class TypeAndFoodRepository {
          - listLiveData : LiveData<List<TypeAndFood>>
          - typeAndFoodByIdList : List<TypeAndFood>
          + TypeAndFoodRepository()
          + getTypeAndFoodLiveData()
          + getTypeAndFoodById()
      }
    }
  }
  

  DiaryEntryRepository o-- DiaryEntryDAO : diaryEntryDAO
  DiaryEntryRepository +-down- InsertFoodDiariesAsyncTask
  DiaryEntryRepository +-down- UpdateFoodDiariesAsyncTask
  DiaryEntryRepository +-down- DeleteFoodDiariesAsyncTask
  DiaryEntryRepository +-down- DeleteAllFoodDiariesAsyncTask
  InsertFoodDiariesAsyncTask -up-|> AsyncTask
  InsertFoodDiariesAsyncTask o-- DiaryEntryDAO : diaryEntryDAO
  UpdateFoodDiariesAsyncTask -up-|> AsyncTask
  UpdateFoodDiariesAsyncTask o-- DiaryEntryDAO : diaryEntryDAO
  DeleteFoodDiariesAsyncTask -up-|> AsyncTask
  DeleteFoodDiariesAsyncTask o-- DiaryEntryDAO : diaryEntryDAO
  DeleteAllFoodDiariesAsyncTask -up-|> AsyncTask
  DeleteAllFoodDiariesAsyncTask o-- DiaryEntryDAO : diaryEntryDAO
  DiemRepository o-- DiemDAO : dao
  DiemRepository +-down- InsertDiemAsyncTask
  DiemRepository +-down- DeleteDiemAsyncTask
  DiemRepository +-down- UpdateDiemAsyncTask
  InsertDiemAsyncTask -up-|> AsyncTask
  InsertDiemAsyncTask o-- DiemDAO : dao
  DeleteDiemAsyncTask -up-|> AsyncTask
  DeleteDiemAsyncTask o-- DiemDAO : dao
  UpdateDiemAsyncTask -up-|> AsyncTask
  UpdateDiemAsyncTask o-- DiemDAO : dao
  FoodAndEntryRepository o-- FoodAndEntryDAO : dao
  FoodRepository o-- FoodDAO : foodDAO
  FoodRepository o-- DiaryEntryDAO : diaryEntryDAO
  FoodRepository o-- FoodTypeDAO : foodTypeDAO
  FoodRepository o-- Food : foodById
  FoodRepository +-down- InsertFoodsAsyncTask
  FoodRepository +-down- UpdateFoodsAsyncTask
  FoodRepository +-down- DeleteFoodsAsyncTask
  FoodRepository +-down- DeleteAllFoodsAsyncTask
  InsertFoodsAsyncTask -up-|> AsyncTask
  InsertFoodsAsyncTask o-- FoodDAO : foodDAO
  UpdateFoodsAsyncTask -up-|> AsyncTask
  UpdateFoodsAsyncTask o-- FoodDAO : foodDAO
  DeleteFoodsAsyncTask -up-|> AsyncTask
  DeleteFoodsAsyncTask o-- FoodDAO : foodDAO
  DeleteAllFoodsAsyncTask -up-|> AsyncTask
  DeleteAllFoodsAsyncTask o-- FoodDAO : foodDAO
  FoodTypeRepository o-- FoodTypeDAO : foodTypeDAO
  FoodTypeRepository +-down- InsertFoodTypesAsyncTask
  FoodTypeRepository +-down- UpdateFoodTypesAsyncTask
  FoodTypeRepository +-down- DeleteFoodTypesAsyncTask
  FoodTypeRepository +-down- DeleteAllFoodTypesAsyncTask
  InsertFoodTypesAsyncTask -up-|> AsyncTask
  InsertFoodTypesAsyncTask o-- FoodTypeDAO : foodTypeDAO
  UpdateFoodTypesAsyncTask -up-|> AsyncTask
  UpdateFoodTypesAsyncTask o-- FoodTypeDAO : foodTypeDAO
  DeleteFoodTypesAsyncTask -up-|> AsyncTask
  DeleteFoodTypesAsyncTask o-- FoodTypeDAO : foodTypeDAO
  DeleteAllFoodTypesAsyncTask -up-|> AsyncTask
  DeleteAllFoodTypesAsyncTask o-- FoodTypeDAO : foodTypeDAO
  TypeAndFoodRepository o-- TypeAndFoodDAO : typeAndFoodDAO

@enduml
